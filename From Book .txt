

/////////////////////////////////////////////////////////////////////////////////////////////////
maximum subarray if there is negative 

int best = 0, sum = 0;
for (int k = 0; k < n; k++) {
sum = max(array[k],sum+array[k]);
best = max(best,sum);
}
cout << best << "\n";


//////////////////////////////////////////////////////////////////////////////////   
generate subset 


for (int b = 0; b < (1<<n); b++) {
vector<long long> subset;
        for (int i = 0; i < n; i++) {
                if (b&(1<<i)) subset.push_back(a[i]);    //  if b begin from 0 phay include if 1 oppsite   a is vector we get subset to it ;
        }  
}




 



